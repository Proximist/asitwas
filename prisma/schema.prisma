datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  telegramId     Int       @unique
  username       String?
  firstName      String?
  lastName       String?
  points        Int       @default(0)
  invitedUsers  String[] @default([])
  invitedBy     String?  @default("")
  level          Int       @default(1)
  introSeen      Boolean   @default(false)
  paymentMethod  String[]  @default([])  // Changed to array
  paymentAddress String[]  @default([])  // Changed to array
  isUpload       Boolean   @default(false)
  imageUrl       String?
  savedImages    String[]  @default([])
  piAmount       Int[]     @default([])
  finalpis       Int[]     @default([])
  baseprice      Float     @default(0.15)
  piaddress      String[]  @default([])   // New field for Pi wallet address
  istransaction  Boolean   @default(false)
  transactionStatus String[] @default(["processing"])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  invitesSent    Invite[] @relation("Inviter") // Invites sent by this user
  invitesReceived Invite[] @relation("Invitee") // Invites received by this user
}

model Invite {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId // Unique identifier
  inviterId  String   // ID of the user who sent the invite
  inviteeId  String   // ID of the user who was invited
  createdAt  DateTime @default(now()) // Timestamp of when the invite was created

  // Define relations
  inviter    User     @relation("Inviter", fields: [inviterId], references: [id])
  invitee    User     @relation("Invitee", fields: [inviteeId], references: [id])
}
